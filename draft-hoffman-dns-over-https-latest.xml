<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.1.1 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-hoffman-dns-over-https" category="exp">

  <front>
    <title abbrev="DNS in JSON">DNS Queries over HTTPS</title>

    <author initials="P." surname="Hoffman" fullname="Paul Hoffman">
      <organization>ICANN</organization>
      <address>
        <email>paul.hoffman@icann.org</email>
      </address>
    </author>
    <author initials="P." surname="McManus" fullname="Patrick McManus">
      <organization>Mozilla</organization>
      <address>
        <email>pmcmanus@mozilla.com</email>
      </address>
    </author>

    <date year="2017" month="April" day="25"/>

    <area>Internet</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>Intermediaries such as governments and ISPs spoof DNS responses, and
block DNS requests to particular recursive resolvers, for a variety of reasons.
They spoof by capturing traffic on port 53, or by redirecting port 853 traffic in the hopes
that the client is using opportunistic encryption.
They block if they know the address of a resolver that they don’t like, such as 
public resolvers that give honest answers.</t>

<t>This document describes how to run DNS service over TLS, specifically on HTTP/2,
based on the “https:” URL scheme.
This design prevents intermediaries from spoofing DNS responses, and makes
it impossible for intermediaries to block the use of those recursive resolvers
without blocking desired HTTP/2-over-TLS connections.
It also prevents intermediaries or passive observers from seeing the DNS traffic.
This design is meant for communication between a DNS stub resolver and a DNS recursive
resolver.</t>

<t>HTTP/2 was chosen instead of HTTP because a client wanting DNS service will
get great value out of some of HTTP/2’s inherent features such as streams and
caching.</t>

<!--
\[ This paragreaph is to be removed when this document is published as an RFC \]
Comments on this draft can be sent to the *** DISPATCH ??? *** mailing list at
<https://www.ietf.org/mailman/listinfo/SOMEURLGOESHERE>.

  RFC4035:
  RFC7230:
  HTMLSPEC:
    author:
      org: W3C
    date: 2016
    title: HTML5, A vocabulary and associated APIs for HTML and XHTML
    target: https://www.w3.org/TR/html5/
  RFC5001:
  RFC6891:
  RFC6975:
  RFC7049:
  RFC7159:
  RFC7252:
  RFC7830:
  RFC7871:
-->



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Over time, there have been many proposals for using HTTP and HTTPS as a substrate for DNS
queries and responses.
To date, none of those proposals have made it beyond early
discussion, partially due to disagreement about what is the “best” method to do so.
In particular, there has been disagreement about what the best format for the responses
should be.
Also, some early proposals have not followed best practices for using HTTP.</t>

<t>This document defines a specific protocol for sending DNS <xref target="RFC1035"/> queries and getting DNS
responses over HTTP/2 <xref target="RFC7540"/> that is running over TLS <xref target="RFC5246"/>.
The queries defined here always use the “https:” URI scheme.</t>

<t>A server that supports this protocol is called a “DNS API server” to differentiate it from
a “DNS server” (one that uses the regular DNS protocol).
Similarly, a client supports this protocol is called a “DNS API client”.</t>

<section anchor="use-cases" title="Use Cases">

<t>There are two primary use cases for this protocol. The primary one is to avoid
intermediaries such as governments and ISPs from spoofing DNS responses, and
blocking DNS requests to particular recursive resolvers.
A secondary use case is a web browser that wants to send DNS queries
protected in an existing HTTP/2-over-TLS session, most likely for better
privacy.</t>

<t>[[ Patrick adds something here about why HTTP/2 is better for this ]]</t>

<t>Note that these use cases are different than those in a similar protocol described at
<xref target="I-D.ietf-dnsop-dns-wireformat-http"/>. The use case for that protocol is 
proxying DNS queries over HTTP instead of over DNS itself.
The use cases in this document all involve the TLS and HTTP/2 being originated at
the location where the query is desired, not acting as a proxy.</t>

</section>
<section anchor="protocol-requirements" title="Protocol Requirements">

<t>The protocol described here bases its design on the following protocol requirements:</t>

<t><list style="symbols">
  <t>The protocol must use HTTP/2 semantics the way that they are commonly used
in other protocols; there is nothing special about the DNS use case.</t>
  <t>The protocol must run over secure transport such as TLS (transport over QUIC
can be defined later as the QUIC protocol matures, and transport over future
protocols such as “HTTP/3” can also be defined later).</t>
  <t>The query format must be able to be flexible enough to express every normal
DNS query.</t>
  <t>The response must be able to be in different formats that can be described
by different documents.
However, this is a mandatory-to-implement response format defined so that
implementations will be interoperable.</t>
  <t>Both the query format and the response formats must be extensible.
In specific, a query must be able to contain one or more EDNS extensions,
including those not yet defined. Further, it must be easy to define different
response formats and to extend already-defined formats.</t>
</list></t>

<t>Non-requirements:</t>

<t><list style="symbols">
  <t>Supporting network-specific DNS64 <xref target="RFC6147"/></t>
  <t>Supporting other network-specific inferences from plaintext DNS queries</t>
</list></t>

</section>
<section anchor="terminology" title="Terminology">

<t>In this document, the key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” are to be interpreted as
described in BCP 14, RFC 2119 <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="Template" title="Template">

<t>The URI template (see <xref target="RFC6570"/>) for DNS API queries is:</t>

<figure><artwork><![CDATA[
{PREFIX}/{DNSMESSAGE}
]]></artwork></figure>

<t>The following variables are used to expand the URI template.</t>

<section anchor="prefix" title="PREFIX">

<t>“PREFIX” MUST be the URI fragment “https://example.net/.well_known/TBD1/”.  The URI
protocol MUST be “https:”.</t>

</section>
<section anchor="dnsmessage" title="DNSMESSAGE">

<t>“DNSMESSAGE” MUST be the on-the-wire representation of a DNS query
message as defined in <xref target="RFC1035"/>, encoded with URL encoding
[[ REFERENCE NEEDED HERE ]]. 
The representation is of a query as it would be sent over UDP, not over TCP.</t>

</section>
</section>
<section anchor="queries" title="Queries">

<t>To send a DNS query, the DNS API client prepares an HTTP GET request using
the template (see <xref target="Template"/>).</t>

<t>The HTTP-related requirements include:</t>

<t><list style="symbols">
  <t>The HTTP GET request MUST have no body.</t>
  <t>The HTTP GET request SHOULD be sent with an HTTP “Accept:” header to say what
type of content can be returned; of course, a server can return whatever type
of content it wants. If the request does not have an HTTP “Accept:” header, the
DNS API server might return a content type that the DNS API client does not understand.</t>
  <t>[[ TALK ABOUT THE MTI TO ACCEPT HERE ]]</t>
  <t>The HTTP GET request SHOULD use If-None-Match headers if earlier responses to the same
query used HTTP ETag headers as described in <xref target="RFC7232"/>.</t>
</list></t>

<t>[[ Paul needs to write a separate document defining the media type ]]</t>

<t>For example, assume that the server’s PREFIX is:</t>

<figure><artwork><![CDATA[
   https://dnsserver.example.net/well_known/TBD1/
]]></artwork></figure>

<t>A query for the A records for “www.example.com” with recursion turned off
would be:</t>

<figure><artwork><![CDATA[
   NEED A REAL EXAMPLE HERE
]]></artwork></figure>

<t>The HTTP request might look like:</t>

<figure><artwork><![CDATA[
   GET api/v1/www.example.com/1?rd=0 HTTP/1.1
   User-Agent: curl/7.16.3 libcurl/7.16.3
   Host: dnsserver.example.net
   Accept: application/dns+json
]]></artwork></figure>

</section>
<section anchor="Responses" title="Responses">

<t>Different response formats will provide more or less information from a DNS
response. For example, one response type might include the information from the
DNS header bytes while another might omit it. The amount and type of information
that a response format gives is solely up to the format, and not defined in
this protocol.</t>

<t>At the time this is published, the response types are works in progress. The
know response types include:</t>

<t><list style="symbols">
  <t>[[ REFERENCE THE NEW MEDIA TYPE ]]</t>
</list></t>

<t>In the HTTP responses, the HTTP cache headers MAY be set to shortest DNS TTL in the response.
The HTTP responses SHOULD set the HTTP ETag headers as described in <xref target="RFC7232"/>.</t>

<t>TODO: Add more detail about setting the HTTP cache headers.</t>

<t>TODO: Add examples of creating these ETag headers.</t>

<t>Servers conforming to this protocol MUST implement responding with messages
formatted with [[ REFERENCE THE NEW MEDIA TYPE ]].</t>

</section>
<section anchor="h2" title="Use in HTTP/2">

<t>TODO: Full discussion about using this protocol in HTTP/2 for server push.
This will also hopefully cover caching and DNS TTLs.</t>

</section>
<section anchor="ianacons" title="IANA Considerations">

<t>TODO: Create a new registry for option names for DNS queries.
This will be a simple registry for new option names, probably with
a designated expert.</t>

<t>TODO: Replace TBD1 in the body with a string from the .well_known registry.
Reference <xref target="RFC5785"/>.</t>

</section>
<section anchor="Security" title="Security Considerations">

<t>Running DNS over existing HTTP/2 over TLS connections relies on the security of the TLS connections
themselves.</t>

<t>A beneficial effect of using DNS over existing HTTP/2 over TLS connections after using DNS over
port 53 is that the DNS messages are then encrypted.</t>

<t>This protocol requires the use of TLS for communication. If a client does not enforce
authentication of the TLS server, the communication channel will be susceptible to many
security problems. See <xref target="RFC7435"/> for a fuller description of non-authenticated TLS.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Joe Hildebrand contributed lots of material for a different interation of this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1035" target='http://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC5246" target='http://www.rfc-editor.org/info/rfc5246'>
<front>
<title>The Transport Layer Security (TLS) Protocol Version 1.2</title>
<author initials='T.' surname='Dierks' fullname='T. Dierks'><organization /></author>
<author initials='E.' surname='Rescorla' fullname='E. Rescorla'><organization /></author>
<date year='2008' month='August' />
<abstract><t>This document specifies Version 1.2 of the Transport Layer Security (TLS) protocol.  The TLS protocol provides communications security over the Internet.  The protocol allows client/server applications to communicate in a way that is designed to prevent eavesdropping, tampering, or message forgery.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5246'/>
<seriesInfo name='DOI' value='10.17487/RFC5246'/>
</reference>



<reference  anchor="RFC6570" target='http://www.rfc-editor.org/info/rfc6570'>
<front>
<title>URI Template</title>
<author initials='J.' surname='Gregorio' fullname='J. Gregorio'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='M.' surname='Hadley' fullname='M. Hadley'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='D.' surname='Orchard' fullname='D. Orchard'><organization /></author>
<date year='2012' month='March' />
<abstract><t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6570'/>
<seriesInfo name='DOI' value='10.17487/RFC6570'/>
</reference>



<reference  anchor="RFC7232" target='http://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor="RFC7540" target='http://www.rfc-editor.org/info/rfc7540'>
<front>
<title>Hypertext Transfer Protocol Version 2 (HTTP/2)</title>
<author initials='M.' surname='Belshe' fullname='M. Belshe'><organization /></author>
<author initials='R.' surname='Peon' fullname='R. Peon'><organization /></author>
<author initials='M.' surname='Thomson' fullname='M. Thomson' role='editor'><organization /></author>
<date year='2015' month='May' />
<abstract><t>This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP), referred to as HTTP version 2 (HTTP/2).  HTTP/2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection.  It also introduces unsolicited push of representations from servers to clients.</t><t>This specification is an alternative to, but does not obsolete, the HTTP/1.1 message syntax.  HTTP's existing semantics remain unchanged.</t></abstract>
</front>
<seriesInfo name='RFC' value='7540'/>
<seriesInfo name='DOI' value='10.17487/RFC7540'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-dnsop-dns-wireformat-http">
<front>
<title>DNS wire-format over HTTP</title>

<author initials='L' surname='Song' fullname='Linjian Song'>
    <organization />
</author>

<author initials='P' surname='Vixie' fullname='Paul Vixie'>
    <organization />
</author>

<author initials='S' surname='Kerr' fullname='Shane Kerr'>
    <organization />
</author>

<author initials='R' surname='Wan' fullname='Runxia Wan'>
    <organization />
</author>

<date month='March' day='28' year='2017' />

<abstract><t>This memo introduces a way to tunnel DNS data over HTTP.  This may be useful in any situation where DNS is not working properly, such as when there is middlebox misbehavior.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dns-wireformat-http-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-dnsop-dns-wireformat-http-01.txt' />
</reference>



<reference  anchor="RFC5785" target='http://www.rfc-editor.org/info/rfc5785'>
<front>
<title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='E.' surname='Hammer-Lahav' fullname='E. Hammer-Lahav'><organization /></author>
<date year='2010' month='April' />
<abstract><t>This memo defines a path prefix for &quot;well-known locations&quot;, &quot;/.well-known/&quot;, in selected Uniform Resource Identifier (URI) schemes.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5785'/>
<seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>



<reference  anchor="RFC6147" target='http://www.rfc-editor.org/info/rfc6147'>
<front>
<title>DNS64: DNS Extensions for Network Address Translation from IPv6 Clients to IPv4 Servers</title>
<author initials='M.' surname='Bagnulo' fullname='M. Bagnulo'><organization /></author>
<author initials='A.' surname='Sullivan' fullname='A. Sullivan'><organization /></author>
<author initials='P.' surname='Matthews' fullname='P. Matthews'><organization /></author>
<author initials='I.' surname='van Beijnum' fullname='I. van Beijnum'><organization /></author>
<date year='2011' month='April' />
<abstract><t>DNS64 is a mechanism for synthesizing AAAA records from A records. DNS64 is used with an IPv6/IPv4 translator to enable client-server communication between an IPv6-only client and an IPv4-only server, without requiring any changes to either the IPv6 or the IPv4 node, for the class of applications that work through NATs.  This document specifies DNS64, and provides suggestions on how it should be deployed in conjunction with IPv6/IPv4 translators.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6147'/>
<seriesInfo name='DOI' value='10.17487/RFC6147'/>
</reference>



<reference  anchor="RFC7435" target='http://www.rfc-editor.org/info/rfc7435'>
<front>
<title>Opportunistic Security: Some Protection Most of the Time</title>
<author initials='V.' surname='Dukhovni' fullname='V. Dukhovni'><organization /></author>
<date year='2014' month='December' />
<abstract><t>This document defines the concept &quot;Opportunistic Security&quot; in the context of communications protocols.  Protocol designs based on Opportunistic Security use encryption even when authentication is not available, and use authentication when possible, thereby removing barriers to the widespread use of encryption on the Internet.</t></abstract>
</front>
<seriesInfo name='RFC' value='7435'/>
<seriesInfo name='DOI' value='10.17487/RFC7435'/>
</reference>




    </references>


<section anchor="previous-work-on-dns-over-http-or-in-other-formats" title="Previous Work on DNS over HTTP or in Other Formats">

<t>The following is an incomplete list of earlier work that related to DNS over HTTP or representing DNS
data in other formats.</t>

<t>The list includes links to the tools.ietf.org site (because these documents
are all expired) and web sites of software.</t>

<t><list style="symbols">
  <t>https://tools.ietf.org/html/draft-mohan-dns-query-xml</t>
  <t>https://tools.ietf.org/html/draft-daley-dnsxml</t>
  <t>https://tools.ietf.org/html/draft-dulaunoy-dnsop-passive-dns-cof</t>
  <t>https://tools.ietf.org/html/draft-bortzmeyer-dns-json</t>
  <t>https://www.nlnetlabs.nl/projects/dnssec-trigger/</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAEwRAFkAA5Vaa3PjthX9jl+Baj8km+rh53rjPlLF1mbd+lVbO0mn6XQg
EpIYk4RCgNaqHue399wLgKTkzSS7M5lQJHCB+zr3XMCDwUC4zOX6VJ5f38t/
1rrKtJXmUVfy/XR6ey/UbFbpR/85K+Xf72+uRWqSUhWYk1Zq7gZLM58Xqhyk
pR3QzMHSuZUVwjpVpv9VuSkx1FW1FiJbVfxo3cHe3td7B0JVWp3Ki9LpqtRO
PKzbH4Nzki4S5U6l/rgSYpWdCimdSU7lRlv/mOqVW57KI/yypnKVntv41W6K
9qdQtVuaCgIG+ARN8P52KN/7rdMrr9GtqvPuW1MtsKOz8fU1/dKFyvJTucKg
YdD6b1miynKIcTuir5IrVda2K9pVWfLQ/cDSr8z/sjxXXflFUtCQvxX+0zAx
hRClqQrlskdNVrh7d7a/d3gcHg/2978Oj8cHR2/C45vjk73weHJweBAfj4/w
VmTlvCvvYnA+zLSbkxPNil25zmA+HsMOjfJP3sZV3+wfnUShR7QXMRgMpJpZ
V6nECcGOLHSaKQ4qWydLqaxcUIyUhS6dlQgQeXF/i48rY+YcZJXGc2m17dNX
McsNbOY//Fxri0nOwAOVy5I6VxVeJ3VloQbNNDlkYyb2LZV8pIXdRkIywsxC
6lBMl3oTVpttZKJWrq6ycoGgVPN5lkhTyhUCSR4f9uEeGlNBAyziaBR/ent8
2AxHSrillkuzQpC5pXL8M8kzqCczK2tL08yKJtZlZrFrqcuk2qxcZsqwHa9j
Nqe5G/lQmjVLUWkKlSxtXzXKybjIRqam/MLJPHvQ/ca4YlXPcqzR2MKPX5B9
lkhE62BVu8aHocDi2CGSuSZnyFTbpMpm8NSSNmBkVZdseKurxyzRHhWml/dY
baWTDOqrPN+QxQgqRgd9MVNWp/SCtt9jGDjtyQ93l9ImS13oYVhS22wBOwNY
OAqy7UCZV6bwLiLbvYwJWagHWDuDgYuVsTab5Zo9viMHKnjL0m5qq8mQAAGr
PxUzYp3hW+38FFqYdgnfB+U8skF7mZiypHDgcLqAPXNrflUX7GqlLC9lZmRI
colXUGuOO+yNVAwBtW0hPBVawTekHUCgQAgBD7G0nGm31rpEZLCLXD1rQ4Rs
pILhgqIifoTbvUJyjXBJyBwlYZbTKiUD0UcITxQZTMVIXmMT0RkxHNaAJrHQ
CC4kl0Oy5TWUhAUhxZpCR2mjgy/ILEtdkaQ5xtZVBw6AFloVDAXA+mSJZbDH
P/8BlenHf0u2BrJd0SKrJVmE3EqOK+CRVK6XmsKtG8g0g7LALvFdkWSCKPnj
f8QZTMheMnEOlRigANkTimEypJNLvvrqK3kOZBpPz97Lb775hl8QOpMVIBpu
d+LPPsJHo/V6zehJZWBEowDfIxpFKDu6v7maIAe+u5ncv5/cTf4K9Rg0j1oA
Bz4zVL+fXl3e307O6FnKpmbxPy4W3x+e8c9UOZSUg739N/wz1HCaftyXY/lo
EjUjeNz4YLDWJBmmpHJ8e2E5nGgsf/yBnrwUVcGfp7Kr1vqQlZrejZauyI9H
oQrs7e3HKvD26+bx65NGob2jWJFO9o+bx4Pjpgy9PWyK09sTSBgM/sr1o8jS
NAdVeEVEoDJpzakmxA2DX1YA7BzFklwqJNWMcgDW3iADDcAAycjaedzlYCYd
mctwLCDuuEA5DxkIaPFzYD00sEEaJKJhK/dlCdxssaNdhzdQqFRLQNFMbwzm
a1XlG5FmNqmR9abs+1LFQJkiPxBe+EjRrDlW1YwyZk0YTaFNsAkEdj3kPZZL
ebxBOgFpyk7Va21gvQl+TShJJIHSV3LWmd41egoL1MtTDBqKMZCs73OX9djV
tTQkIM/NWqde6ooqPcBg1+ifKC4Ac832D7WDhIPAmZynIvfSCDBPT4HdPD/L
rm8QmxGERLP/lqsC0ngmERzMdMGmqGIl1+BQvfwgoknPz1x/mzX8HlPJllX5
Wm0sl42dYnbRFDMxlh7S/WK25jJvPbQ06uGZCiVhkeyRfkjBMK/n42E+Z2yk
BKVQovIgwtg47kuKQV6lJqW9CxdMgGhYXOz1UNxnRZaT9/otfH/OzvyUHrR7
9Up+gPpnisKELEVmwX9uTfUuKwhdyD4JDQiR1RE/lGTcOJD278FbPZosFdln
kMPfIgSiqdmfxxOH7EDU87SrCm1TybWeyVll1jZ6l0ogy6RQ5YVC3AhSGIQA
ZgQbRCnRHxn5Fy+YA/brMaEw1hM35BjZDcUc1oCg7FElG5j+x3+j9sWGATzQ
clY6Ko4hPEOKb2LoZzZIaR3x439Q8sQ1NteQRqs7HiNfNsFHQ8oAcaSGtD6O
2miJ/DCl0vf09NsdA/KLQ6AxrN+ZclsRSOb7uInO+3m3A+1yE37JjaizOp/7
7G31yXaJAGIbLx/J2Zwx5INYDWCyGRMwU2WLrOTaCL1oGILJc6w1m9oFiNjI
QMxACvuMhco3BVxWWAufNLdRuztEIkZzNHMCfcqYvMbMK+Aa5hc4tEdb7jzi
zKojFC3XV3JLboHWmk0SdLRoKYEsiYcMQFqnfyD/E6k0Zc7RnwrqXqWh0tJI
tH8KpQbKQ2eOQIZwlYcgjAw2OmL46U1RN8EOtJSImghvabmfirlP7vmyfc2D
//nhgghPYGgRoXNFga68UjSks5anl75R2BE2r+kbxDXKNWv32F6HPV6JGf3u
cq8bvXwwhILKus0oIXMdqOk8BwLQT12aerGkt/rjils5NAmYyp18jn3EiN80
siOwfUpuVnbS1S8f2rvGPCGoIBqNazs4ZgQQDxwT5Rvb6PtkYbBDjIDqmGoz
cGaApir3PKLZTNA12sMaXpbCJY7lhLHcE/itwmLoiSvaPiv3LWKnk0pBIjup
q3ZUK6qvPzpdcodHWwcHivSBqpsXtWsp4LlTFMfE2ipgLYJtQpYOsrBOnyM9
yevUt2AEepTQG90oOZTv6ooiv08ludmOshuu2TyotTDkvVCBdTN+VWBLjgYm
3QyiDcOoIQF0OXiR1Pe+YtP2SnR6pnoYNMQJurw58jSGjmCen7fH+/x9MQut
CG01iQ32KlfkpY9uq5YRfk1RmLPS5GaxoUOcbVBl5ikfAB8Qj7rUu/pwP+31
/f/l9Q0/302QlHeTc3q+fz++vGwe/AiBHzcfLsN3empnnt1cXU2uz/3kq/G/
ej6Veze304ub6/Flz3MQ04QZMovB24oWVOH+b89u5f5Rn1s/Oh/zBqMn4n2C
1ETwEuV6ehUfnz1KE8dz8euXaNSDsY9PQCxfx76B2VKsVxm57ZdffhFPt3eT
dxc/PI+eMORqcn8//m7yzF9YdAvodDhFIevrMMFvAIqYE91dhMLCooXo+Yee
ZJvPdDN8jj6ZM7cXWzj9UVGKDhEOo+Fa5/l/6XipHE2/Pd8f9YZSBn1FA6BR
ZmS8Q8lrt9pg/fbH9h4Qyfgf8wDkA0FehAZ/iNXgnSiAhmqhCXpjRsBnHebf
p2Myk1KHnwE56AyJX8B0nh3BBGimr88m8noyQbhI6q2Z82DHHkq3NpCFgzQP
GoqqLULYtz6+9eca8eH81hd33y+c3XKsxIPxp1fB4RQpgQp21Oo3xbBl0nQ0
BBrKPYxnNN9NppGk+paJWcduwDUx+fx66GOHJgMpcuYqXcQIWKYbOvBiGXZS
6OHkzKRtwXkxNORjNApbP+68N04SvXJog5YAM2LGsAE4BbWawm1W3CYT/tLM
UJSQnXUF//7JfwMH14TdoXGiQX4EC9HcTEGQ6AjKAvkeyot5qBZ+q6nRTEq8
Zr+2SXaK2G68ZJEtli6urJqlWIfmGHfHkc1ydQmxfLvBZuRwnI4v/yHH3958
mMrp+4m8ml7I6Y0cn51NbqdtaP6W1YlDXcwHKAl6cKUcuInXwdLpMPXkma7a
5iceVllVaOHjmnGEpU+matHM5jTrgKNvlA8ODxgLQ7dR56gaOmWx6ypzmt1E
h2943O7k48klN3Deal498Q7gGECnT+dOmNQa1Bv/CxuQrEVNKZtDJzQSftiw
i1270OURddyyCZY/pi6PyxK96dH5VRQCotvzwRwaQWLYHJiIy7mISNDuh1AF
Au8m40s5+WF8dXs5YT+2WM5mjg70AZUb88CNXSuHvKxW2ehxf7Szn9H+N1X6
lz1P1feH+zQaDXc1GC9g6FOJbeajk+H+m+EhZM46P2nke/SQp/KT1qLPIQmw
9CoPZ8Zk2j/+ZE3pVSBcu2tC6elV8wxsO2+o4wtawxQP1eIxS7UnVzB1TuS2
uVKCaZliqK2jGjCqbmwQPWuEcwR5EwYsY3++kBgzOcDPbOOw9fUyyyn9PfHx
UkxB1wPON6CqMHUZyGYAqY5kf22jXrBdujNhfmxNTo16vYr55gd4XkJ40FYw
sX0Cggj1gU/nlg3fbg6n+9vcl/bm2QAxN+5nIWlBjQPrIfhmaGd4F/p36iLh
0PXke3k1Ob8Yy+m/biMGXfjmMsRvc5LSvKNjeN1gBziYrwZ8OG6XoJkU8OSG
6fQy3oA1Xu6mRgyugG4sIn79DHya3pzfnMpxmvp4SzX4few+bTgU/PTmtyaH
0GMekNCdRZgHW3Y3gzn34aIGZYF8zePMzuEZl9TdXon7CUaZQHCs8MHiIpH5
fT5i0vHBH8XEs81Xy4PnqM67GknYnjIHW/jz150zvkaAP2bl6req7TLcNHE6
c8NLd5jzmg6qE+NLM1/GcJQHZ5Nt6GB+fD2WZ3AtIKAKnd/Tq0yVCgazzSbP
yMZUREpNYbvIrAtYbfj2k+/FbUOnA7Pq7mum/UEUjLwtgCR2hfRJ4Rno9Iat
LFQ4R2GqBE6tK9eEwp0Gr0q0pDoSo5coUaA6dCFFake8kR3a3GxiKO50aKfC
efLJ22OOVcQOgDpzm5cGil+exV8+/U+Iu3BYTfZgJ+ycJban2J1bSOwq5zOz
MhTZsAEzb069OqOJbBZW549kalTQmS4BX3yeowH6Cd/f+Uj6vF2oOR3KbM8U
4S7dX250aFVMD9/M0R1euBXXabw72D3xst17XFr8xaUoE0T1gq5pSuJE85+A
0DF70nQk0Tw+LTwCbl+zJksFDfMmHG1tqa5m4ayBbp5EY3CKQcAB0Po+9oz0
hxHPz+HvESi7YCKPdKu4iRJdU2drCFhsySfaOKGwy3W6iIeIfzeAuSxP9ayi
vCTeCtCsaVZuHENbQadV5E6/aHsKxN1yR/dOVz/0f7sxU8kDrXtb6cfM1FZ+
j0JEcdVEAkMsX7XLGy637zwt2O1uM253UJwMJS9QgO9MTUtiqcT5kIgdDcz5
Ypmmh4v3Pqlyqj2kbA9RaHVeItRDi1/lQ8OQnTG5ba5oASnUZ8Vbbl8CmjMy
+pskPjoGbtBZ72tGQLoPoGnWX2/P3RrDmP5H4rq9Bl+XjvwfSBVmGf48iunq
4GOR/76Jqcr1hib+/hl1rurSbMKpfPjbA147MfPfJ2OGnP1foTdgojSPGWNn
IrHYMgfNzNXM4mmEsP8JIGA9dU8GiMjFQlcj8X8I30mLXiYAAA==

-->

</rfc>

